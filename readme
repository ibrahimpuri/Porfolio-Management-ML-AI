## Automated Portfolio Management

### Overview
This project aims to create an advanced portfolio management system that leverages machine learning models and market sentiment analysis to make informed investment decisions. The system fetches financial data from various sources, preprocesses it, performs feature engineering, and trains predictive models to optimize portfolio allocations. Additionally, it includes capabilities to discover hidden correlations between assets and mitigate concentration risks, ensuring a balanced and diversified portfolio.

### Features
- **Data Collection & Preprocessing**: Fetches historical stock data from a PostgreSQL database and preprocesses it for analysis.
- **Feature Engineering**: Includes calculation of technical indicators such as SMA, EMA, RSI, and MACD to enhance model input features.
- **Hidden Correlations Discovery**: Visualizes and analyzes correlations between different assets to uncover hidden relationships.
- **Concentration Risk Mitigation**: Utilizes the Herfindahl-Hirschman Index (HHI) and portfolio optimization techniques to ensure balanced asset allocation.
- **Market Sentiment Analysis**: Integrates OpenAI's GPT-3.5 to analyze market news headlines and provide sentiment insights.
- **Model Training & Evaluation**: Implements a Random Forest Regressor with hyperparameter tuning to predict stock returns and evaluates model performance.
- **Automated Portfolio Decisions**: Based on predicted returns and market sentiment, the system makes automated portfolio adjustment recommendations.

### Installation
1. **Clone the repository**:
    ```sh
    git clone https://github.com/your-username/automated-portfolio-management.git
    cd automated-portfolio-management
    ```
2. **Create and activate a virtual environment**:
    ```sh
    python3 -m venv venv
    source venv/bin/activate  # On Windows use `venv\Scripts\activate`
    ```
3. **Install dependencies**:
    ```sh
    pip install -r requirements.txt
    ```
4. **Set up environment variables**:
    Create a `.env` file in the root directory and add your configuration:
    ```
    DATABASE_URL=your_postgresql_database_url
    NASDAQ_API_KEY=your_nasdaq_data_link_api_key
    ALPHA_VANTAGE_API_KEY=your_alpha_vantage_api_key
    OPENAI_API_KEY=your_openai_api_key
    ```

### Usage
Run the main script to start the portfolio management system:
```sh
python portfoliomanagement.py
```
The script will fetch data, preprocess it, perform feature engineering, train and evaluate the model, analyze market sentiment, and make portfolio adjustment recommendations.

### Project Structure
- `data/`: Directory to store fetched data (if needed).
- `models/`: Directory to save trained models.
- `scripts/`: Additional scripts for data fetching, preprocessing, etc.
- `portfoliomanagement.py`: Main script to run the portfolio management system.
- `requirements.txt`: Dependencies required to run the project.

### Contributing
Contributions are welcome! Please fork this repository and submit a pull request for review.

### License
This project is licensed under the MIT License. See the `LICENSE` file for more details.
